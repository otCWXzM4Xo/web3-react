{"version":3,"file":"lattice-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport Web3ProviderEngine from 'web3-provider-engine'\nimport { LatticeSubprovider } from '@0x/subproviders/lib/src/subproviders/lattice'\nimport CacheSubprovider from 'web3-provider-engine/subproviders/cache.js'\nimport { RPCSubprovider } from '@0x/subproviders/lib/src/subproviders/rpc_subprovider' // https://github.com/0xProject/0x-monorepo/issues/1400\n\ninterface LatticeConnectorArguments {\n  chainId: number\n  url: string\n  pollingInterval?: number\n  requestTimeoutMs?: number\n  appName: string\n}\n\nexport class LatticeConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly url: string\n  private readonly pollingInterval?: number\n  private readonly requestTimeoutMs?: number\n  private readonly appName: string\n  private provider: any\n\n  constructor({ chainId, url, pollingInterval, requestTimeoutMs, appName }: LatticeConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.url = url\n    this.pollingInterval = pollingInterval\n    this.requestTimeoutMs = requestTimeoutMs\n    this.appName = appName\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      const LatticeKeyring = await import('eth-lattice-keyring').then(m => m?.default ?? m)\n      const engine = new Web3ProviderEngine({ pollingInterval: this.pollingInterval })\n      const opts = {\n        appName: this.appName,\n        latticeConnectClient: LatticeKeyring,\n        networkId: this.chainId\n      }\n      engine.addProvider(new LatticeSubprovider(opts))\n      engine.addProvider(new CacheSubprovider())\n      engine.addProvider(new RPCSubprovider(this.url, this.requestTimeoutMs))\n      this.provider = engine\n    }\n\n    this.provider.start()\n\n    return { provider: this.provider, chainId: this.chainId }\n  }\n\n  public async getProvider(): Promise<Web3ProviderEngine> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.chainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider._providers[0].getAccountsAsync(1).then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider.stop()\n  }\n\n  public async close(): Promise<null> {\n    this.emitDeactivate()\n    // Due to limitations in the LatticeSubprovider API, we use this code with `getAccounts`\n    // as a hack to allow us to close out the connection and forget data.\n    // It will get handled in `eth-lattice-keyring`, which will forget the device and return\n    // an empty array (whose first element will be null/undefined)\n    const CLOSE_CODE = -1000\n    return this.provider._providers[0].getAccountsAsync(CLOSE_CODE).then((accounts: string[]): string => accounts[0])\n  }\n}\n"],"names":["chainId","url","pollingInterval","requestTimeoutMs","appName","supportedChainIds","activate","this","provider","start","_this3","then","m","LatticeKeyring","engine","Web3ProviderEngine","addProvider","LatticeSubprovider","latticeConnectClient","networkId","CacheSubprovider","RPCSubprovider","getProvider","getChainId","getAccount","_providers","getAccountsAsync","accounts","deactivate","stop","close","emitDeactivate","AbstractConnector"],"mappings":"8fAuBgBA,IAAAA,QAASC,IAAAA,IAAKC,IAAAA,gBAAiBC,IAAAA,iBAAkBC,IAAAA,6BACvD,CAAEC,kBAAmB,CAACL,YAEvBA,QAAUA,IACVC,IAAMA,IACNC,gBAAkBA,IAClBC,iBAAmBA,IACnBC,QAAUA,+GAGJE,8BACNC,2BAcAC,SAASC,QAEP,CAAED,SAAUE,EAAKF,SAAUR,QAASU,EAAKV,2BAhB3CU,EAAKF,gCACqB,8QAAO,4BAAuBG,MAAK,SAAAC,+BAAKA,SAAAA,aAAcA,qBAA7EC,OACAC,EAAS,IAAIC,EAAmB,CAAEb,gBAAiBQ,EAAKR,kBAM9DY,EAAOE,YAAY,IAAIC,qBALV,CACXb,QAASM,EAAKN,QACdc,qBAAsBL,EACtBM,UAAWT,EAAKV,WAGlBc,EAAOE,YAAY,IAAII,GACvBN,EAAOE,YAAY,IAAIK,iBAAeX,EAAKT,IAAKS,EAAKP,qBAChDK,SAAWM,8FAQPQ,kDACJf,KAAKC,gDAGDe,iDACJhB,KAAKP,+CAGDwB,iDACJjB,KAAKC,SAASiB,WAAW,GAAGC,iBAAiB,GAAGf,MAAK,SAACgB,UAA+BA,EAAS,6CAGhGC,WAAA,gBACApB,SAASqB,UAGHC,4BACXvB,KAAKwB,iCAALxB,KAMYC,SAASiB,WAAW,GAAGC,kBADf,KAC4Cf,MAAK,SAACgB,UAA+BA,EAAS,8CA7D5EK"}